@use "base";

@include base.reset;

html,
body {
  background-color: base.$white;
  block-size: 100vh;

  @supports (height: 100dvh) {
    block-size: 100dvh;
  }

  inline-size: 100%;
  max-inline-size: 100vw;
}

body {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  justify-items: center;
  min-block-size: 100vh;

  @supports (height: 100dvh) {
    min-block-size: 100dvh;
  }
}

.container {
  align-items: center;
  background-image: url("/images/bg-main-desktop.png");
  background-position: left top;
  background-repeat: no-repeat;
  background-size: clamp(200px, 33.55vw, 483px) 100%;
  display: flex;
  flex-direction: column;
  inline-size: 100%;
  max-inline-size: 1440px;
  min-block-size: 100%;
}

.main {
  align-items: center;
  display: flex;
  flex: 1 0 auto;
  flex-direction: column;
  inline-size: 100%;
  justify-content: center;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  border: 0;
  padding: 0;
  margin: -1px;

  clip: rect(0, 0, 0, 0);

  @supports (clip-path: inset(50%)) {
    clip: auto;
    clip: inset(50%);
  }
}

.content {
  max-inline-size: 1110px;
  inline-size: 100%;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(6, minmax(auto, 60px));
  gap: base.fluidSpace(32, "desktop") base.fluidSpace(30, "desktop");
}

.card-front {
  border-radius: base.convertPxToRem(10);
  grid-column: 1 / 6;
  grid-row: 1 / 4;
  background: url("/images/bg-card-front.png") no-repeat center / cover;
}

.card-back {
  border-radius: base.convertPxToRem(10);
  grid-column: 2 / 7;
  grid-row: 4 / 7;
  background: url("/images/bg-card-back.png") no-repeat center / cover;
}

.form {
  grid-column: 8 / 12;
  grid-row: 1 / 7;
  background-color: yellow;
}

.footer {
  flex-shrink: 1;

  .attribution {
    color: base.$purple-500;
    font-size: 0.6875rem;
    padding-block: 0.5rem;
    text-align: center;

    &__link {
      color: base.$purple-950;
    }
  }
}
