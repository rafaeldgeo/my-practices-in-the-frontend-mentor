@use "base";

// define style for content into results class
@mixin results-content($aling: center) {
  display: flex;
  flex-direction: column;
  row-gap: base.fluidSpace(16);
  align-items: $aling;

  @include base.breakpoints(sm) {
    row-gap: base.fluidSpace(16, "tablet");
  }

  @include base.breakpoints(md) {
    row-gap: base.fluidSpace(16, "tablet");
  }
}

// define style for title into results class
@mixin results-title($aling: center) {
  color: base.$white;
  font-size: base.fluidTypo(16, 24);
  font-weight: 700;
  text-align: $aling;

  @include base.breakpoints(sm) {
    font-size: base.fluidTypo(20, 24, "tablet");
  }

  @include base.breakpoints(md) {
    font-size: base.fluidTypo(20, 24, "desktop");
  }
}

// define style for paragraph into results class
@mixin results-text($aling: center) {
  color: base.$slate-300;
  font-size: base.fluidTypo(10, 16);
  font-weight: 500;
  line-height: base.fluidLineHeight(10, 16, 1.5);
  text-align: $aling;

  @include base.breakpoints(sm) {
    font-size: base.fluidTypo(10, 16, "tablet");
    line-height: base.fluidLineHeight(10, 16, 1.5, "tablet");
  }

  @include base.breakpoints(md) {
    font-size: base.fluidTypo(10, 16, "desktop");
    line-height: base.fluidLineHeight(10, 16, 1.5, "desktop");
  }
}

// define row-gap for breakpoints mobile, tablet and desktop
@mixin row-gap($pxValue) {
  row-gap: base.fluidSpace($pxValue);

  @include base.breakpoints(sm) {
    row-gap: base.fluidSpace($pxValue, "tablet");
  }

  @include base.breakpoints(md) {
    row-gap: base.fluidSpace($pxValue, "desktop");
  }
}

// define font-size and line-height for breakpoints tablet and desktop
@mixin fontSize-LineHeight($pxValueMin, $pxValueMax, $LineHeightValue) {
 
  @include base.breakpoints(sm) {
    font-size: base.fluidTypo($pxValueMin, $pxValueMax, "tablet");
    line-height: base.fluidLineHeight(
      $pxValueMin,
      $pxValueMax,
      $LineHeightValue,
      "tablet"
    );
  }

  @include base.breakpoints(md) {
    font-size: base.fluidTypo($pxValueMin, $pxValueMax, "desktop");
    line-height: base.fluidLineHeight(
      $pxValueMin,
      $pxValueMax,
      $LineHeightValue,
      "desktop"
    );
  }
}
